name: C/C++ CI

on:
  push:
    tags:
    - v*.*
  pull_request:
    branches:
    - master

env:
  LSL_URL: 'https://github.com/sccn/liblsl/releases/download'
  LSL_RELEASE_PREFIX: 'v'
  LSL_RELEASE: '1.15.2'
  LSL_RELEASE_SUFFIX: ''

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-20.04
        - windows-latest
        - macOS-latest
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - name: Install Qt (Windows and MacOS)
      if: matrix.os == 'windows-latest' || matrix.os == 'macOS-latest'
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.0

    - name: Get liblsl (Windows)
      if: matrix.os == 'windows-latest'
      run: |
           Invoke-WebRequest -Uri $Env:LSL_URL/$Env:LSL_RELEASE_PREFIX$Env:LSL_RELEASE$Env:LSL_RELEASE_SUFFIX/liblsl-$Env:LSL_RELEASE-Win_amd64.zip -o liblsl.7z
           7z x liblsl.7z -oLSL

    - name: Get liblsl and Qt (Ubuntu)
      if: matrix.os == 'ubuntu-20.04'
      run: |
           echo ${{ github.ref }}
           curl -L ${LSL_URL}/${LSL_RELEASE_PREFIX}${LSL_RELEASE}${LSL_RELEASE_SUFFIX}/liblsl-${LSL_RELEASE}-bionic_amd64.deb -o liblsl.deb
           sudo dpkg -i liblsl.deb
           sudo apt-get update --fix-missing  # Needed for libpulse on azure mirror.
           sudo apt install -y libpulse-dev qtbase5-dev qtmultimedia5-dev qtdeclarative5-dev libqt5gamepad5-dev

    - name: Get liblsl (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
           curl -L ${LSL_URL}/${LSL_RELEASE_PREFIX}${LSL_RELEASE}${LSL_RELEASE_SUFFIX}/liblsl-${LSL_RELEASE}-OSX_amd64.tar.bz2 -o liblsl.tar.bz2
           mkdir LSL
           tar -xvf liblsl.tar.bz2 -C LSL
#           brew install qt
#           echo "CMAKE_PREFIX_PATH=/usr/local/opt/qt" >> $GITHUB_ENV

    - name: Configure CMake
      shell: bash
      run: |
           cmake -S . -B build -DLSL_INSTALL_ROOT=$PWD/LSL/ -DLSL_COMFY_DEFAULTS=ON -DCPACK_DEBIAN_PACKAGE_SHLIBDEPS=ON

    - name: Make & Install
      run: cmake --build build --config Release -j --target install
      
    - name: Package
      run: cmake --build build --config Release -j --target package

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2-preview
      with:
        name: pkg-${{ matrix.os }}
        path: build/*.[dbz][ezi][b2p]  # Hack to get deb, bz2, zip. Will also get e.g. de2, dep, dzb, dz2, dzp, etc...

  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
    
    - name: Download Artifacts
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/download-artifact@v2-preview
      # By not specifying with: name:, it defaults to downloading all artifacts.

    # Official GitHub Upload-Asset action does not allow for uploading multiple files.
    # There are many community alternatives. Below is one that combines release and upload, with globbing.
    # See also: svenstaro/upload-release-action shogo82148/actions-upload-release-asset meeDamian/github-release csexton/release-asset-action
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # tag_name: ${{ github.ref }}  # ${{ github.ref }} is default
        name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        # body_path: CHANGELOG.txt
        files: pkg-*/*
